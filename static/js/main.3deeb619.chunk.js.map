{"version":3,"sources":["Duration.js","App.js","reportWebVitals.js","index.js"],"names":["Duration","className","seconds","dateTime","Math","round","format","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","string","slice","App","my_url","useState","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","state","setState","useEffect","handleSetPlaybackRate","e","parseFloat","handleTogglePIP","handleProgress","locstate","console","log","seeking","h","window","innerHeight","w","innerWidth","player","useRef","id","class","ref","width","height","onReady","onStart","onPlay","onEnablePIP","onDisablePIP","onPause","onBuffer","onSeek","onEnded","onError","onProgress","onDuration","handleDuration","onClick","screenfull","request","findDOMNode","current","p","showPreview","ReactPlayer","canEnablePIP","type","checked","onChange","for","min","max","step","value","onMouseDown","target","onMouseUp","seekTo","htmlFor","Array","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3deeb619.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Duration ({ className, seconds }) {\r\n  return (\r\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n      {format(seconds)}\r\n    </time>\r\n  )\r\n}\r\n\r\nfunction format (seconds) {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nfunction pad (string) {\r\n  return ('0' + string).slice(-2)\r\n}\r\n","import './App.css';\nimport './assets3/css/main.css'\nimport ReactPlayer from 'react-player';\nimport { createRef, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom'\nimport { hot } from 'react-hot-loader'\nimport screenfull from 'screenfull'\nimport Duration from './Duration'\n\nfunction App() {\n  const my_url = \"https://www.youtube.com/watch?v=5N4w6Fizfcw\"\n  const [state,setState] = useState({\n    url: my_url,\n    pip: false,\n    playing: true,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false\n  });\n\n  const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip } = state;\n  \n  let load = url => {\n    console.log(url)\n    setState({...state,\n      url:url,\n      played: 0,\n      loaded: 0,\n      pip: false\n    })\n  }\n\n  useEffect(\n    ()=>{\n      setState({...state,url:my_url})\n    },\n    url\n  )\n  \n  let handlePlayPause = () => {\n    setState({...state,playing: !state.playing })\n  }\n\n  let handleStop = () => {\n    setState({...state,url: null, playing: false })\n  }\n\n  let handleToggleControls = () => {\n    const url = state.url\n    setState({...state,\n      controls: !state.controls,\n      url: null\n    })\n  }\n\n  let handleToggleLight = () => {\n    setState({...state,light: !state.light })\n  }\n\n  let handleToggleLoop = () => {\n    setState({...state,loop: !state.loop })\n  }\n\n  let handleVolumeChange = e => {\n    setState({...state,volume: parseFloat(e.target.value) })\n  }\n\n  let handleToggleMuted = () => {\n    setState({...state,muted: !state.muted })\n  }\n\n  let handleSetPlaybackRate = e => {\n    setState({...state,playbackRate: parseFloat(e) })\n  }\n\n  let handleTogglePIP = () => {\n    setState({...state,pip: !state.pip })\n  }\n\n  let handlePlay = () => {\n    console.log('onPlay')\n    setState({...state,playing: true })\n  }\n\n  let handleEnablePIP = () => {\n    console.log('onEnablePIP')\n    setState({...state,pip: true })\n  }\n\n  let handleDisablePIP = () => {\n    console.log('onDisablePIP')\n    setState({...state,pip: false })\n  }\n\n  let handlePause = () => {\n    console.log('onPause')\n    setState({...state,playing: false })\n  }\n\n  let handleSeekMouseDown = e => {\n    setState({...state,seeking: true })\n  }\n\n  const handleSeekChange = e => {\n    setState({...state, played: parseFloat(e.target.value) })\n  }\n\n  const handleSeekMouseUp = e => {\n    setState({...state, seeking: false })\n    player.current.seekTo(parseFloat(e.target.value))\n  }\n\n  let handleProgress = (locstate) => {\n    console.log('onProgress', state)\n    // We only want to update time slider if we are not currently seeking\n    if (!state.seeking) setState({...state,...locstate})\n  }\n\n  let handleEnded = () => {\n    console.log('onEnded')\n    setState({...state,playing: state.loop })\n  }\n\n  let handleDuration = (duration) => {\n    console.log('onDuration', duration)\n    setState({...state,duration })\n  }\n\n  let handleClickFullscreen = () => {\n    screenfull.request(findDOMNode(player.current))\n  }\n\n  let renderLoadButton = (url, label) => {\n    return (\n      <button onClick={() => load(url)}>\n        {label}\n      </button>\n    )\n  }\n\n  \n\n  let h = window.innerHeight*0.6;\n  let w = window.innerWidth*0.6;\n//1920*1080\n  if(h/w<1080/1920){\n    h=w/1920*1080;\n  }else{\n    w=h/1080*1920;\n  }\n\n  const player = useRef(0);\n\n  return (\n    <>\n    <div id=\"wrapper\">\n      <section id=\"main\" class=\"wrapper\">\n        <div class=\"inner\">\n          <h1 class=\"major\">Our Video</h1>\n          \n          <ul class=\"actions\">\n            <li>\n              <ReactPlayer\n                ref={player}\n                className='react-player'\n                width={w}\n                height={h}\n                url={url}\n                pip={pip}\n                playing={playing}\n                controls={controls}\n                light={light}\n                loop={loop}\n                playbackRate={playbackRate}\n                volume={volume}\n                muted={muted}\n                onReady={() => console.log('onReady')}\n                onStart={() => console.log('onStart')}\n                onPlay={handlePlay}\n                onEnablePIP={handleEnablePIP}\n                onDisablePIP={handleDisablePIP}\n                onPause={handlePause}\n                onBuffer={() => console.log('onBuffer')}\n                onSeek={e => console.log('onSeek', e)}\n                onEnded={handleEnded}\n                onError={e => console.log('onError', e)}\n                onProgress={(state)=>handleProgress(state)}\n                onDuration={(duration)=>handleDuration(duration)}\n              />\n            </li>\n            <li>\n            <table>\n            <tbody>\n              <tr>\n                <th>Controls</th>\n                <td>\n                <ul class=\"actions\">\n                  <li><button onClick={handlePlayPause}>{playing ? 'Pause' : 'Play'}</button></li>\n                  <li><button onClick={handleClickFullscreen}>Fullscreen</button></li>\n                  {light &&\n                    <li><button onClick={() => this.p.showPreview()}>Show preview</button></li>}\n                  {ReactPlayer.canEnablePIP(url) &&\n                    <li><button onClick={()=>handleTogglePIP}>{pip ? 'Disable PiP' : 'Enable PiP'}</button></li>}\n                </ul>\n                <div class=\"col-6 col-12-small\">\n                      <input type=\"checkbox\" id=\"controls\" checked={controls} onChange={handleToggleControls} />\n                      <label for=\"controls\">build-in control bar</label>\n                    </div>\n                \n                </td>\n              </tr>\n              <tr>\n                <th>Speed</th>\n                <td>\n                  <ul class=\"actions\">\n                    <li><button onClick={()=>handleSetPlaybackRate(\"1\")}>1x</button></li>\n                    <li><button onClick={()=>handleSetPlaybackRate(\"1.5\")}>1.5x</button></li>\n                    <li><button onClick={()=>handleSetPlaybackRate(\"2\")}>2x</button></li>\n                  </ul>\n                </td>\n              </tr>\n              <tr>\n                <th>Seek</th>\n                <td>\n                  <input\n                    type='range' min={0} max={0.999999} step='any'\n                    value={played}\n                    onMouseDown={handleSeekMouseDown}\n                    onChange={handleSeekChange}\n                    onMouseUp={handleSeekMouseUp}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Volume</th>\n                <td>\n                  <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n                </td>\n              </tr>\n              \n              <tr>\n                <th>\n                  <label htmlFor='muted'>Muted</label>\n                </th>\n                <td>\n                  <div class=\"col-6 col-12-small\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"mute\" checked={muted} onChange={handleToggleMuted} />\n\t\t\t\t\t\t\t\t\t\t<label for=\"mute\">mute</label>\n\t\t\t\t\t\t\t\t\t</div>\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor='loop'>Loop</label>\n                </th>\n                <td>\n                  <div class=\"col-6 col-12-small\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"loop\" checked={loop} onChange={handleToggleLoop} />\n\t\t\t\t\t\t\t\t\t\t<label for=\"loop\">Loop</label>\n\t\t\t\t\t\t\t\t\t</div>\n                </td>\n              </tr>\n              <tr>\n                <th>\n                  <label htmlFor='light'>Light</label>\n                </th>\n                <td>\n                  <div class=\"col-6 col-12-small\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"light\" checked={light} onChange={handleToggleLight} />\n\t\t\t\t\t\t\t\t\t\t<label for=\"light\">Light mode</label>\n\t\t\t\t\t\t\t\t\t</div>\n                </td>\n              </tr>\n              <tr>\n                <th>Played</th>\n                <td><progress max={1} value={played} /></td>\n              </tr>\n              <tr>\n                <th>Loaded</th>\n                <td><progress max={1} value={loaded} /></td>\n              </tr>\n            </tbody>\n          </table>\n              \n            </li>\n          </ul>\n\n          <section className='section'>\n\n          <h2>State</h2>\n\n          <table>\n            <tbody>\n              <tr>\n                <th>url</th>\n                <td className={!url ? 'faded' : ''}>\n                  {(url instanceof Array ? 'Multiple' : url) || 'null'}\n                </td>\n              </tr>\n              <tr>\n                <th>playing</th>\n                <td>{playing ? 'true' : 'false'}</td>\n              </tr>\n              <tr>\n                <th>volume</th>\n                <td>{volume.toFixed(3)}</td>\n              </tr>\n              <tr>\n                <th>played</th>\n                <td>{played.toFixed(3)}</td>\n              </tr>\n              <tr>\n                <th>loaded</th>\n                <td>{loaded.toFixed(3)}</td>\n              </tr>\n              <tr>\n                <th>duration</th>\n                <td><Duration seconds={duration} /></td>\n              </tr>\n              <tr>\n                <th>elapsed</th>\n                <td><Duration seconds={duration * played} /></td>\n              </tr>\n              <tr>\n                <th>remaining</th>\n                <td><Duration seconds={duration * (1 - played)} /></td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n\n        </div>\n      </section>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}